name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - main  # Trigger deployment on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH key
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      # Step 3: Add EC2 IP to known hosts
      - name: Add EC2 IP to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.IP }} >> ~/.ssh/known_hosts

      # Step 4: Install Docker (optional safety check)
      - name: Install Docker on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl enable --now docker
              sudo usermod -aG docker $USER
            fi
          EOF

      # Step 5: Deploy the app with Docker
      - name: Deploy Docker container on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
            set -e
            cd /home/ubuntu/test-ec2

            # Pull latest code
            git pull origin main

            # Build Docker image
            sudo docker build -t app-container .

            # Stop and remove old container if running
            if sudo docker ps -q -f name=app-container; then
              sudo docker stop app-container
              sudo docker rm app-container
            fi

            # Run new container
            sudo docker run -d --name app-container -p 3000:3000 app-container

            # Cleanup dangling images (optional)
            sudo docker image prune -f
          EOF
