name: Deploy to EC2

on:
  push:
    branches:
      - main  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH key for EC2 access
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa  # Ensure EC2_SSH_KEY is stored as a secret
          chmod 400 ~/.ssh/id_rsa  # Secure the private key

      # Step 3: Add EC2 host to known_hosts (avoids SSH prompt on first connection)
      - name: Add EC2 host to IP
        run: |
          ssh-keyscan -H ${{ secrets.IP }} >> ~/.ssh/known_hosts  # Add the EC2 instance IP to known_hosts

      # Step 4: Install Docker on EC2 (if not already installed)
      - name: Install Docker on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
            sudo apt update
            sudo apt install -y docker.io
            sudo systemctl enable --now docker
          EOF

      # Step 5: Deploy to EC2 with Docker
     - name: Deploy to EC2 with Docker
  run: |
    ssh -v -i ~/.ssh/id_rsa ${{ secrets.USER }}@${{ secrets.IP }} << 'EOF'
      # Change directory to the application directory on EC2
      cd /home/ubuntu/test-ec2

      # Pull the latest code from the repository
      git pull origin main

      # Build the Docker image using the Dockerfile in the repository
      sudo docker build -t app-container .

      # Stop and remove the existing container (if running)
      sudo docker ps -q -f name=app-container | xargs -r sudo docker stop | xargs -r sudo docker rm

      # Run the Docker container in detached mode
      sudo docker run -d --name app-container -p 80:80 app-container

      # Optional: Clean up unused images (if desired)
      sudo docker image prune -f
    EOF
